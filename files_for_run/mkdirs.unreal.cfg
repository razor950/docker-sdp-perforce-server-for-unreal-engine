# SDP Installation Configuration
#==============================================================================
#
#------------------------------------------------------------------------------
# Storage Mount Points
#
# See the SDP Guide for optimal storage volume layout information.  These
# values can reference the absolute paths to storage volume mount points.
# Alternately, for demo-grade installations, they may be simple directories.
#
# If they do not exist, they will be created during installation.
# 
# DB1 = P4ROOT metadata volume during install.
#
# DB2 = offline_db metadata volume during install.
#
# Note: Typically DB1 and DB2 are set to the same value (volume), but can also
# be set to '/hxmetadata1' and '/hxmetadata2' respectively (if these are validly
# mounted, and separate, filesystems).  Note that after installation, certain
# scripts and/or recovery procedures can swap DB1 and DB2, such that P4ROOT
# could be on DB2 and offline_db on DB1.
#
# DD  = Volume for storing versioned files, metadata checkpoints, and
#       numbered journal files. This contains all critical assets that
#       must be backed up.
#
# LG  = Volume used to store P4LOG (active server log), P4JOURNAL (the active
#       journal), P4TMP, and various application and script logs.

DB1=/hxmetadata
DB2=/hxmetadata
DD=/hxdepots
LG=/hxlogs

# If you are sharing the depotdata volume with a replica, change this value to TRUE
SHAREDDATA=FALSE

# Operating system user/group (owner of all directories and files) - should not be root!!
OSUSER=perforce
OSGROUP=perforce

# Set the PERMS value to change permissions assigned to key files/folers.
# OS permissions for SDP for directories and executable files are 700 by
# default, and 600 for non-executable files. The values mean that only the
# owner (i.e. the OSUSER defined above) can see or execute any files.
# This is recommended for optimal security. In some environments, such as
# test environments, it makes sense to make the permissions less restrictive,
# so that permissions can be extended to include members of the defined
# OSGROUP defined above, or to 'other'.  Set PERMS to 'Owner' for
# 700/600 permissions. Set the value to 'Group' for 750/640 permissions.
# Set the value to 'Other' for 755/644 permissions.
PERMS=Owner

# CASE_SENSITIVE settings:
# 0 -- Server will run '-C1' mode, forcing case-insensitive mode on normally case-sensitive platforms
#      such as Linux
# 1 -- Server will run with case sensitivity default of the underlying platform (Unix is case sensitive).

# To avoid potential integration issues with our tools, such as UnrealGameSync, we recommend running a case-insensitive Perforce server.
# https://docs.unrealengine.com/5.1/en-US/using-perforce-as-source-control-for-unreal-engine/
CASE_SENSITIVE=0

# Admin user's account name.
ADMINUSER=perforce

# Admin user's password - this will be written to /p4/common/config/.p4passwd.p4_1.admin (or appropriate
# alternative instance file). You can leave this value blank and subsequently edit that file if you wish
# but don't forget!
P4ADMINPASS=adminpass

# Default domain - makes it easier to edit this script by avoiding repetition in many cases
DEFAULT_DOMAIN="example.com"

# Email address from which SDP emails are sent.  This must be exactly one email address.  Depending on the
# configuration of the email server, it may or may not be a distribution list.  More strict email
# server configurations require it to be an email associated with an individual account.
MAILFROM="admin@${DEFAULT_DOMAIN}"

# Email to receive emails from SDP scripts. This can be a comma-separated list and/or contain a distribution
# list email (e.g. PerforceAdmin@MyCompany.com). If you want something other than $MAILFROM, just 
# remove $MAILFROM and create your own list in quotes.
MAILTO=$MAILFROM

# Mail Host Address - this is only needed if you use the p4review.py script
MAILHOST="mail.${DEFAULT_DOMAIN}"

# SSL_PREFIX should be blank to not use SSL, otherwise ssl:
#
# If you are planning to use SSL, you need to put certificates in /p4/ssl after
# the SDP install or you can generate a self-signed certificate as follows:
# Edit /p4/ssl/config.txt to put in the info for your company.
# Then run:
# /p4/common/bin/p4master_run <instance> /p4/<instance>/p4d_<instance> -Gc
# For example using instance 1:
# /p4/common/bin/p4master_run 1 /p4/1/bin/p4d_1 -Gc
# Note: Editing the config.txt is not strictly necessary, as the certificate
# details are not visible to users, only the SSL fingerprint is.

# we leave it blank
SSL_PREFIX=

# Set MASTERINSTANCE to the first instance in your installation.
# This is used when installing additional instances on a machine after the
# first. It is used to copy the P4ROOT/license file (if available) from the
# master instance new instances.
MASTERINSTANCE=1

P4_PORT=${SDP_INSTANCE}666
P4BROKER_PORT=${SDP_INSTANCE}667

# Note: The p4ftpd and p4web products are no longer supported. These settings
# may be removed in a future release.
P4FTP_PORT=202${SDP_INSTANCE}
P4WEB_PORT=808${SDP_INSTANCE}

# If your SDP_INSTANCE is non numeric, then uncomment the items below to set the PORT setting.
# Port for this Perforce server to listen on.
# P4_PORT=1666

# If your proxy listening port is different from its master listening port, set the master's target port below
P4P_TARGET_PORT=1666

# Ignore the broker port if you are not running a broker.
# P4BROKER_PORT=1667
# P4WEB_PORT=80
# P4FTP_PORT=21

# DNS Name (or IP address) of master FOR THIS INSTANCE.
# A DNS Name is much easier to manage for failover purposes (although an IP will work)
# IMPORTANT NOTE this value must be reachable (valid DNS or similar) from this instance!!!
#   It is also used to set the P4TARGET values for replicas (by mkrep.sh) - so needs
#   to be valid for that purpose too!
#   If you are in AWS or cloud then think about Security Group restrictions or similar.
# Examples:
# - edge server: set this to DNS for commit-server
# - replica: set this to DNS for parent server
# - HA replica for commit: set this to DNS for commit-server
# - HA replica for edge: set this to DNS for edge-server
# Examples:
#   p4master
#   p4d_edge_lon
P4MASTERHOST=DNS_name_of_master_server_for_this_instance

# Replication service user's password - written to /p4/common/config/.p4passwd.p4_<instance>.service
# This value is only required for replicas
P4SERVICEPASS=servicepass

# The server.id of the master server (always the same value for all servers in a 
# distributed topology)
MASTER_ID=master.${SDP_INSTANCE}

# Set SERVER_TYPE to one of:
# p4d_master - A master/commit server.
# p4d_replica - A replica with all metadata from the master (not filtered in any way).
# p4d_filtered_replica - A filtered replica or forwarding replica.
# p4d_edge - An edge server
# p4d_edge_replica - An replica of an edge server (with no extra filtering).
# p4broker - An SDP host running only a broker, with no p4d.
# p4proxy - An SDP host running a proxy (maybe with a broker in front), with no p4d.
SERVER_TYPE=p4d_master

# Replica server.id name. Required if SERVER_TYPE is p4d_replica, p4d_edge,
# or p4d_filtered_replica.
REPLICA_ID=replica

# Email address for p4review complaints for each instance - only required if p4review.py is used.
# look something like P4Review_1666@example.com.  Set
# the COMPLAINFROM_PREFIX (e.g. "P4Review") and
# COMPLAINFROM_DOMAIN (e.g. "example.com)" here.  Instance
# specific values are substituted below.
COMPLAINFROM_DOMAIN="${DEFAULT_DOMAIN}"
COMPLAINFROM="${SSL_PREFIX}${P4MASTERHOST}:${P4_PORT}_P4Review\@${COMPLAINFROM_DOMAIN}"
